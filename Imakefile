XCOMM	$Id: Imakefile,v 1.4 2008/11/08 02:25:48 nonaka Exp $

#include "config.tmpl"

XCOMM GTK+
XCOMM for 1.2.x
XCOMM GTK_CONFIG?=	gtk-config
XCOMM for 2.x
GTK_CONFIG?=	pkg-config gtk+-2.0
GTK_INCLUDE=	`$(GTK_CONFIG) --cflags`
GTK_LIB=	`$(GTK_CONFIG) --libs`

XCOMM SDL 1.2
SDL_CONFIG?=	sdl-config
SDL_INCLUDE=	`$(SDL_CONFIG) --cflags`
SDL_LIB=	`$(SDL_CONFIG) --libs`

NASM?= nasm
NASMFLAGS= -i ./x68k -i ./x11
NASMOBJFLAGS?= -f elf

#if defined(NO_SOUND)
EXTRA_DEFINES+= -DNOSOUND
#endif

#if defined(NO_MERCURY)
EXTRA_DEFINES+= -DNO_MERCURY
NASMFLAGS+= -DNO_MERCURY
#endif

SYS_LIBRARIES= -lm

EXTRA_INCLUDES= -I./x11 -I./x68k -I./fmgen -I./win32api \
		$(GTK_INCLUDE) $(SDL_INCLUDE)

CXXEXTRA_INCLUDES= $(EXTRA_INCLUDES)
CXXEXTRA_DEFINES= $(EXTRA_DEFINES)
CXXDEBUGFLAGS= $(CDEBUGFLAGS)

LOCAL_LIBRARIES= $(XLIB) $(GTK_LIB) $(SDL_LIB)

#define	PassCDebugFlags


CPUOBJS= x68k/d68k.o
CPUASMOBJS= x68k/68kem.o

X68KOBJS= \
	x68k/adpcm.o x68k/bg.o x68k/crtc.o x68k/dmac.o x68k/fdc.o \
	x68k/fdd.o x68k/disk_d88.o x68k/disk_dim.o x68k/disk_xdf.o \
	x68k/gvram.o x68k/ioc.o x68k/irqh.o x68k/mem_wrap.o x68k/mercury.o \
	x68k/mfp.o x68k/palette.o x68k/midi.o x68k/pia.o x68k/rtc.o \
	x68k/sasi.o x68k/scc.o x68k/scsi.o x68k/sram.o x68k/sysport.o \
	x68k/tvram.o \
	x68k/cpu_glue.o
X68KASMOBJS= x68k/bga.o x68k/memory.o x68k/memory_glue.o

FMGENOBJS= \
	fmgen/fmgen.o fmgen/fmg_wrap.o fmgen/file.o fmgen/fmtimer.o \
	fmgen/opm.o fmgen/opna.o fmgen/psg.o

X11OBJS= \
	x11/joystick.o x11/juliet.o x11/keyboard.o x11/mouse.o x11/prop.o \
	x11/status.o x11/timer.o \
	x11/dswin.o x11/windraw.o x11/winui.o \
	x11/about.o
X11CXXOBJS= x11/winx68k.o
X11ASMOBJS= x11/haveunit.o

WIN32APIOBJS= win32api/dosio.o win32api/fake.o win32api/peace.o

AOBJS=		$(CPUASMOBJS) $(X68KASMOBJS) $(X11ASMOBJS)
COBJS=		$(X68KOBJS) $(X11OBJS) $(WIN32APIOBJS) $(CPUOBJS)
CXXOBJS=	$(FMGENOBJS) $(X11CXXOBJS)
OBJS=		$(COBJS) $(CXXOBJS) $(AOBJS)

ASRCS=		$(AOBJS:.o=.asm)
CSRCS=		$(COBJS:.o=.c)
CXXSRCS=	$(CXXOBJS:.o=.cpp)
SRCS=		$(CSRCS) $(CXXSRCS)
ALLSRCS=	$(CSRCS) $(CXXSRCS) $(ASRCS)

.SUFFIXES: .asm .c .cpp

.c.o:
	$(CC) -o $@ $(CFLAGS) $(_NOOP_) -c $*.c

.cpp.o:
	$(CXX) -o $@ $(CXXFLAGS) $(_NOOP_) -c $*.cpp

.asm.o:
	$(NASM) $(NASMFLAGS) $(NASMOBJFLAGS) $<

ComplexCplusplusProgramTarget(xkeropi)

cleandir distclean::
	-$(RM) .depend
	$(RM) $(OBJS)
